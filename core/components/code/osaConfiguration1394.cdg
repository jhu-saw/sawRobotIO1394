// -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
// ex: set filetype=cpp softtabstop=4 shiftwidth=4 tabstop=4 cindent expandtab:

inline-header {
#include <set>
#include <memory>
#include <cisstCommon/cmnUnits.h>
#include <cisstCommon/cmnJointType.h>
#include <cisstVector/vctDynamicMatrixTypes.h>
#include <cisstParameterTypes/prmActuatorJointCoupling.h>
#include <sawRobotIO1394/sawRobotIO1394Revision.h>
#include <sawRobotIO1394/sawRobotIO1394Export.h>

class AmpIO;

namespace sawRobotIO1394 {
    const size_t MAX_BOARDS = 16;
    const size_t MAX_AXES = 10;
} // namespace sawRobotIO1394

} // inline-header

class {
    name osaLinearFunction;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name scale;
        type double;
        default 0.0;
        visibility public;
    }
    member {
        name offset;
        type double;
        default 0.0;
        visibility public;
    }
}

class {
    name osaLimits;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name lower;
        type double;
        visibility public;
    }
    member {
        name upper;
        type double;
        visibility public;
    }
}

class {
    name osaDrive1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name effort_to_current;
        type osaLinearFunction;
        visibility public;
        default osaLinearFunction();
    }
    member {
        name current_to_bits;
        type osaLinearFunction;
        visibility public;
    }
    member {
        name bits_to_current;
        type osaLinearFunction;
        visibility public;
    }
    member {
        name maximum_current;
        type double;
        default 0.0;
        visibility public;
    }
}

class {
    name osaEncoder1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    enum {
        name velocity_source_t;
        enum-value {
            name FIRMWARE;
            description firmware;
        }
        enum-value {
            name SOFTWARE;
            description software;
        }
    }
    member {
        name bits_to_position;
        type osaLinearFunction;
        visibility public;
    }
    member {
        name position_limits_soft;
        type osaLimits;
        visibility public;
    }
    member {
        name velocity_source;
        type osaEncoder1394Configuration::velocity_source_t;
        visibility public;
    }
}

class {
    name osaPotentiometer1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name bits_to_voltage;
        type osaLinearFunction;
        visibility public;
    }
    member {
        name voltage_to_position;
        type osaLinearFunction;
        visibility public;
        default osaLinearFunction();
    }
}

class {
    name osaBrake1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name board_id;
        type int;
        visibility public;
    }
    member {
        name axis_id;
        type int;
        visibility public;
        default -1;
    }
    member {
        name drive;
        type osaDrive1394Configuration;
        visibility public;
    }
    member {
        name release_current;
        type double;
        visibility public;
    }
    member {
        name release_time;
        type double;
        visibility public;
    }
    member {
        name released_current;
        type double;
        visibility public;
    }
    member {
        name engaged_current;
        type double;
        visibility public;
    }
}

class {
    name osaActuator1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name board_id;
        type int;
        visibility public;
    }
    member {
        name axis_id;
        type int;
        visibility public;
        default -1;
    }
    member {
        name joint_type;
        type cmnJointType;
        visibility public;
        default cmnJointType::CMN_JOINT_UNDEFINED;
    }
    member {
        name drive;
        type osaDrive1394Configuration;
        visibility public;
    }
    member {
        name encoder;
        type osaEncoder1394Configuration;
        visibility public;
        default osaEncoder1394Configuration();
    }
    member {
        name potentiometer;
        type osaPotentiometer1394Configuration;
        visibility public;
    }
}

class {
    name osaPotentiometerTolerance1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name axis_id;
        type int;
        visibility public;
        default -1;
    }
    member {
        name distance;
        type double;
        visibility public;
    }
    member {
        name latency;
        type double;
        visibility public;
    }
}

class {
    name osa1394;
    enum {
        name hardware_t;
        enum-value {
            name HARDWARE_UNDEFINED;
            description Undefined;
        }
        enum-value {
            name QLA1;
            description QLA1;
        }
        enum-value {
            name DQLA;
            description DQLA;
        }
        enum-value {
            name dRA1;
            description dRA1;
        }
    }
}

class {
    name osaPotentiometers1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    enum {
        name potentiometer_type_t;
        enum-value {
            name UNDEFINED;
            description undefined;
        }
        enum-value {
            name NONE;
            description none;
        }
        enum-value {
            name ANALOG;
            description analog;
        }
        enum-value {
            name DIGITAL;
            description digital;
        }
    }
    member {
        name potentiometers_type;
        type osaPotentiometers1394Configuration::potentiometer_type_t;
        visibility public;
    }
    member {
        name tolerances;
        type std::vector<osaPotentiometerTolerance1394Configuration>;
        visibility public;
        default std::vector<osaPotentiometerTolerance1394Configuration>();
    }
    member {
        name coupling;
        type prmActuatorJointCoupling;
        default prmActuatorJointCoupling();
        visibility public;
        description Matrix to convert potentiometer to actuators.  E.g. on dVRK MTMsm the potentiometers are mounted on the joints;
    }
    member {
        name lookup_table_file;
        type std::string;
        visibility public;
        default "";
    }
}

class {
    name osaRobot1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;

    member {
        name name;
        type std::string;
        visibility public;
    }
    member {
        name hardware_version;
        type osa1394::hardware_t;
        default osa1394::HARDWARE_UNDEFINED;
        visibility public;
    }
    member {
        name serial_number;
        type std::string;
        visibility public;
    }
    member {
        name path;
        type std::vector<std::string>;
        default std::vector<std::string>();
        visibility public;
    }
    member {
        name only_IO;
        type bool;
        default false;
        visibility public;
    }
    member {
        name has_encoder_preload;
        type bool;
        default false;
        visibility public;
    }
    member {
        name number_of_actuators;
        type size_t;
        visibility public;
    }
    member {
        name actuators;
        type std::vector<osaActuator1394Configuration>;
        visibility public;
    }
    member {
        name number_of_brakes;
        type size_t;
        visibility public;
    }
    member {
        name brakes;
        type std::vector<osaBrake1394Configuration>;
        visibility public;
        default std::vector<osaBrake1394Configuration>();
    }
    member {
        name potentiometers;
        type osaPotentiometers1394Configuration;
        default osaPotentiometers1394Configuration();
        visibility public;
    }
}

class {
    name osaDigitalInput1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name name;
        type std::string;
        visibility public;
    }
    member {
        name board_id;
        type int;
        visibility public;
    }
    member {
        name bit_id;
        type int;
        visibility public;
    }
    member {
        name trigger_when_pressed;
        type bool;
        visibility public;
    }
    member {
        name trigger_when_released;
        type bool;
        visibility public;
    }
    member {
        name pressed_value;
        type bool;
        visibility public;
    }
    member {
        name skip_first_run;
        type bool;
        visibility public;
        default false;
    }
    member {
        name debounce_time;
        type double;
        visibility public;
        default 0.0;
    }
    member {
        name debounce_time_click;
        type double;
        visibility public;
        default 0.0;
    }
}

class {
    name osaDigitalOutput1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name name;
        type std::string;
        visibility public;
    }
    member {
        name board_id;
        type int;
        visibility public;
    }
    member {
        name bit_id;
        type int;
        visibility public;
    }
    member {
        name high_duration;
        type double;
        visibility public;
        default 0.0;
    }
    member {
        name low_duration;
        type double;
        visibility public;
        default 0.0;
    }
    member {
        name is_PWM;
        type bool;
        visibility public;
        default false;
    }
    member {
        name PWM_frequency;
        type double;
        visibility public;
        default 0.0;
    }
}

class {
    name osaDallasChip1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name name;
        type std::string;
        visibility public;
    }
    member {
        name board_id;
        type int;
        visibility public;
    }
}

class {
    name osaPort1394Configuration;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name robots;
        type std::vector<osaRobot1394Configuration>;
        visibility public;
        default std::vector<osaRobot1394Configuration>();
    }
    member {
        name digital_inputs;
        type std::vector<osaDigitalInput1394Configuration>;
        visibility public;
        default std::vector<osaDigitalInput1394Configuration>();
    }
    member {
        name digital_outputs;
        type std::vector<osaDigitalOutput1394Configuration>;
        visibility public;
        default std::vector<osaDigitalOutput1394Configuration>();
    }
    member {
        name dallas_chips;
        type std::vector<osaDallasChip1394Configuration>;
        visibility public;
        default std::vector<osaDallasChip1394Configuration>();
    }
}

class {
    name osaActuatorMapping;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name board;
        type AmpIO *;
        visibility public;
        default nullptr;
        is-data false;
    }
    member {
        name board_id;
        type int;
        visibility public;
    }
    member {
        name axis;
        type int;
        visibility public;
    }
}

class {
    name osaBrakeMapping;
    namespace sawRobotIO1394;
    attribute CISST_EXPORT;
    member {
        name board;
        type AmpIO *;
        visibility public;
        default nullptr;
        is-data false;
    }
    member {
        name board_id;
        type int;
        visibility public;
    }
    member {
        name axis;
        type int;
        visibility public;
    }
}
